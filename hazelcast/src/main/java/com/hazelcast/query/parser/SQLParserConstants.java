/* Generated By:JavaCC: Do not edit this line. SQLParserConstants.java */
package com.hazelcast.query.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface SQLParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int AND = 1;
  /** RegularExpression Id. */
  int OR = 2;
  /** RegularExpression Id. */
  int NOT = 3;
  /** RegularExpression Id. */
  int IN = 4;
  /** RegularExpression Id. */
  int BETWEEN = 5;
  /** RegularExpression Id. */
  int LIKE = 6;
  /** RegularExpression Id. */
  int ILIKE = 7;
  /** RegularExpression Id. */
  int REGEX = 8;
  /** RegularExpression Id. */
  int EQUALS = 9;
  /** RegularExpression Id. */
  int EQ = 10;
  /** RegularExpression Id. */
  int DOUBLEEQ = 11;
  /** RegularExpression Id. */
  int NOTEQUAL = 12;
  /** RegularExpression Id. */
  int GREATER = 13;
  /** RegularExpression Id. */
  int LESSER = 14;
  /** RegularExpression Id. */
  int GREATER_EQ = 15;
  /** RegularExpression Id. */
  int LESSER_EQ = 16;
  /** RegularExpression Id. */
  int LPAREN = 17;
  /** RegularExpression Id. */
  int RPAREN = 18;
  /** RegularExpression Id. */
  int DIGIT = 19;
  /** RegularExpression Id. */
  int NULL = 20;
  /** RegularExpression Id. */
  int NUM = 21;
  /** RegularExpression Id. */
  int ID = 22;
  /** RegularExpression Id. */
  int SINGLE_QUOTED_STRING = 23;
  /** RegularExpression Id. */
  int QUOTED_STRING = 24;
  /** RegularExpression Id. */
  int FLOAT = 25;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"and\"",
    "\"or\"",
    "\"not\"",
    "\"in\"",
    "\"between\"",
    "\"like\"",
    "\"ilike\"",
    "\"regex\"",
    "<EQUALS>",
    "\"=\"",
    "\"==\"",
    "\"!=\"",
    "\">\"",
    "\"<\"",
    "\">=\"",
    "\"<=\"",
    "\"(\"",
    "\")\"",
    "<DIGIT>",
    "\"NULL\"",
    "<NUM>",
    "<ID>",
    "<SINGLE_QUOTED_STRING>",
    "<QUOTED_STRING>",
    "<FLOAT>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\",\"",
  };

}
